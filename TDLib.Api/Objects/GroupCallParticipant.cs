using System;
using Newtonsoft.Json;

namespace TdLib
{
    /// <summary>
    /// Autogenerated TDLib APIs
    /// </summary>
    public static partial class TdApi
    {
        /// <summary>
        /// Represents a group call participant
        /// </summary>
        public partial class GroupCallParticipant : Object
        {
            /// <summary>
            /// Data type for serialization
            /// </summary>
            [JsonProperty("@type")]
            public override string DataType { get; set; } = "groupCallParticipant";

            /// <summary>
            /// Extra data attached to the object
            /// </summary>
            [JsonProperty("@extra")]
            public override string Extra { get; set; }

            /// <summary>
            /// Identifier of the user
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("user_id")]
            public int UserId { get; set; }

            /// <summary>
            /// User's synchronization source
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("source")]
            public int Source { get; set; }

            /// <summary>
            /// True, if the participant is speaking as set by setGroupCallParticipantIsSpeaking
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("is_speaking")]
            public bool IsSpeaking { get; set; }

            /// <summary>
            /// True, if the current user can mute the participant
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("can_be_muted")]
            public bool CanBeMuted { get; set; }

            /// <summary>
            /// True, if the current user can allow the participant to unmute themself or unmute the participant (only for self)
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("can_be_unmuted")]
            public bool CanBeUnmuted { get; set; }

            /// <summary>
            /// True, if the participant is muted
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("is_muted")]
            public bool IsMuted { get; set; }

            /// <summary>
            /// True, if the participant can unmute themself
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("can_unmute_self")]
            public bool CanUnmuteSelf { get; set; }

            /// <summary>
            /// User's order in the group call participant list. The bigger is order, the higher is user in the list. If order is 0, the user must be removed from the participant list
            /// </summary>
            [JsonConverter(typeof(Converter.Int64))]
            [JsonProperty("order")]
            public long Order { get; set; }
        }
    }
}