using System;
using System.Threading.Tasks;
using Newtonsoft.Json;

namespace TdLib
{
    /// <summary>
    /// Autogenerated TDLib APIs
    /// </summary>
    public static partial class TdApi
    {
        /// <summary>
        /// Sends a Telegram Passport authorization form, effectively sharing data with the service. This method must be called after getPassportAuthorizationFormAvailableElements if some previously available elements are going to be reused
        /// </summary>
        public class SendPassportAuthorizationForm : Function<Ok>
        {
            /// <summary>
            /// Data type for serialization
            /// </summary>
            [JsonProperty("@type")]
            public override string DataType { get; set; } = "sendPassportAuthorizationForm";

            /// <summary>
            /// Extra data attached to the function
            /// </summary>
            [JsonProperty("@extra")]
            public override string Extra { get; set; }

            /// <summary>
            /// Authorization form identifier
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("autorization_form_id")]
            public int AutorizationFormId { get; set; }

            /// <summary>
            /// Types of Telegram Passport elements chosen by user to complete the authorization form
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("types")]
            public PassportElementType[] Types { get; set; }
        }

        /// <summary>
        /// Sends a Telegram Passport authorization form, effectively sharing data with the service. This method must be called after getPassportAuthorizationFormAvailableElements if some previously available elements are going to be reused
        /// </summary>
        public static Task<Ok> SendPassportAuthorizationFormAsync(
            this Client client, int autorizationFormId = default, PassportElementType[] types = default)
        {
            return client.ExecuteAsync(new SendPassportAuthorizationForm
            {
                AutorizationFormId = autorizationFormId, Types = types
            });
        }
    }
}