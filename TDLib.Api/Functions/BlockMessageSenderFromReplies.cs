using System;
using System.Threading.Tasks;
using Newtonsoft.Json;

namespace TdLib
{
    /// <summary>
    /// Autogenerated TDLib APIs
    /// </summary>
    public static partial class TdApi
    {
        /// <summary>
        /// Blocks an original sender of a message in the Replies chat
        /// </summary>
        public class BlockMessageSenderFromReplies : Function<Ok>
        {
            /// <summary>
            /// Data type for serialization
            /// </summary>
            [JsonProperty("@type")]
            public override string DataType { get; set; } = "blockMessageSenderFromReplies";

            /// <summary>
            /// Extra data attached to the function
            /// </summary>
            [JsonProperty("@extra")]
            public override string Extra { get; set; }

            /// <summary>
            /// The identifier of an incoming message in the Replies chat
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("message_id")]
            public long MessageId { get; set; }

            /// <summary>
            /// Pass true if the message must be deleted
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("delete_message")]
            public bool DeleteMessage { get; set; }

            /// <summary>
            /// Pass true if all messages from the same sender must be deleted
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("delete_all_messages")]
            public bool DeleteAllMessages { get; set; }

            /// <summary>
            /// Pass true if the sender must be reported to the Telegram moderators
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("report_spam")]
            public bool ReportSpam { get; set; }
        }

        /// <summary>
        /// Blocks an original sender of a message in the Replies chat
        /// </summary>
        public static Task<Ok> BlockMessageSenderFromRepliesAsync(
            this Client client, long messageId = default, bool deleteMessage = default,
            bool deleteAllMessages = default, bool reportSpam = default)
        {
            return client.ExecuteAsync(new BlockMessageSenderFromReplies
            {
                MessageId = messageId, DeleteMessage = deleteMessage, DeleteAllMessages = deleteAllMessages,
                ReportSpam = reportSpam
            });
        }
    }
}