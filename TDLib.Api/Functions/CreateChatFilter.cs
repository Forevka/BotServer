using System;
using System.Threading.Tasks;
using Newtonsoft.Json;

namespace TdLib
{
    /// <summary>
    /// Autogenerated TDLib APIs
    /// </summary>
    public static partial class TdApi
    {
        /// <summary>
        /// Creates new chat filter. Returns information about the created chat filter
        /// </summary>
        public class CreateChatFilter : Function<ChatFilterInfo>
        {
            /// <summary>
            /// Data type for serialization
            /// </summary>
            [JsonProperty("@type")]
            public override string DataType { get; set; } = "createChatFilter";

            /// <summary>
            /// Extra data attached to the function
            /// </summary>
            [JsonProperty("@extra")]
            public override string Extra { get; set; }

            /// <summary>
            /// Chat filter
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("filter")]
            public ChatFilter Filter { get; set; }
        }

        /// <summary>
        /// Creates new chat filter. Returns information about the created chat filter
        /// </summary>
        public static Task<ChatFilterInfo> CreateChatFilterAsync(
            this Client client, ChatFilter filter = default)
        {
            return client.ExecuteAsync(new CreateChatFilter
            {
                Filter = filter
            });
        }
    }
}