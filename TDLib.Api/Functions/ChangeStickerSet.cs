using System;
using System.Threading.Tasks;
using Newtonsoft.Json;

namespace TdLib
{
    /// <summary>
    /// Autogenerated TDLib APIs
    /// </summary>
    public static partial class TdApi
    {
        /// <summary>
        /// Installs/uninstalls or activates/archives a sticker set
        /// </summary>
        public class ChangeStickerSet : Function<Ok>
        {
            /// <summary>
            /// Data type for serialization
            /// </summary>
            [JsonProperty("@type")]
            public override string DataType { get; set; } = "changeStickerSet";

            /// <summary>
            /// Extra data attached to the function
            /// </summary>
            [JsonProperty("@extra")]
            public override string Extra { get; set; }

            /// <summary>
            /// Identifier of the sticker set
            /// </summary>
            [JsonConverter(typeof(Converter.Int64))]
            [JsonProperty("set_id")]
            public long SetId { get; set; }

            /// <summary>
            /// The new value of is_installed
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("is_installed")]
            public bool IsInstalled { get; set; }

            /// <summary>
            /// The new value of is_archived. A sticker set can't be installed and archived simultaneously
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("is_archived")]
            public bool IsArchived { get; set; }
        }

        /// <summary>
        /// Installs/uninstalls or activates/archives a sticker set
        /// </summary>
        public static Task<Ok> ChangeStickerSetAsync(
            this Client client, long setId = default, bool isInstalled = default, bool isArchived = default)
        {
            return client.ExecuteAsync(new ChangeStickerSet
            {
                SetId = setId, IsInstalled = isInstalled, IsArchived = isArchived
            });
        }
    }
}